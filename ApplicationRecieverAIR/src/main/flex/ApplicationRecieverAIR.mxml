<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
                       xmlns:s="library://ns.adobe.com/flex/spark" 
                       xmlns:mx="library://ns.adobe.com/flex/mx"
                       applicationComplete="init()"
                       showStatusBar="false" width="800" height="480" xmlns:view="sk.yoz.remotair.demo.view.*">
<fx:Script>
<![CDATA[
    import air.update.ApplicationUpdater;
    import air.update.events.DownloadErrorEvent;
    import air.update.events.StatusUpdateEvent;
    import air.update.events.UpdateEvent;
    
    import mx.controls.Alert;
    import mx.events.CloseEvent;
    
    import sk.yoz.remotair.events.GenericConnectorEvent;
    import sk.yoz.remotair.events.RecieverEvent;
    import sk.yoz.remotair.net.GenericConnector;
    import sk.yoz.remotair.net.Reciever;
    
    [Bindable]
    private var receiver:Reciever = new Reciever(
        GenericConnector.HANDSHAKE_URL, 
        GenericConnector.DEVELOPER_KEY, 
        GenericConnector.CHANNEL_SERVICE);
    
    private var updater:ApplicationUpdater = new ApplicationUpdater;
    
    private function init():void
    {
        updater.updateURL = "http://remotair.yoz.sk/air/update.xml";
        updater.addEventListener(UpdateEvent.INITIALIZED, onUpdateInitialized);
        updater.addEventListener(StatusUpdateEvent.UPDATE_STATUS, onUpdateStatus);
        updater.addEventListener(ErrorEvent.ERROR, onUpdateError);
        updater.addEventListener(DownloadErrorEvent.DOWNLOAD_ERROR, onDownloadError);
        updater.initialize();
        
        receiver.addEventListener(GenericConnectorEvent.NET_DISCONNECTED, onNetDisconneceted);
        receiver.addEventListener(GenericConnectorEvent.PEER_CONNECTED, onPeerConneceted);
        receiver.addEventListener(GenericConnectorEvent.PEER_DISCONNECTED, onPeerDisconneceted);
    }
    
    private function onUpdateInitialized(event:UpdateEvent):void
    {
        updater.checkNow();
    }
    
    private function onUpdateStatus(event:StatusUpdateEvent):void
    {
        if(!event.available)
            return;
        
        Alert.show("An updated version " + event.version + " is available!\n" +
            "Do you want to install it?",
            "Update Available", Alert.YES|Alert.NO, null, 
            function(event:CloseEvent):void
            {
                if(event.detail != Alert.YES)
                    return;
                
                var xml:XML = updater.updateDescriptor;
                var ns:Namespace = xml.namespace();
                var request:URLRequest = new URLRequest(xml.ns::url);
                navigateToURL(request);
            });
    }
    
    private function onUpdateError(event:ErrorEvent):void{}
    private function onDownloadError(event:DownloadErrorEvent):void{}
    
    private function onNetDisconneceted(event:GenericConnectorEvent):void
    {
        currentState = "form";
        Alert.show("You have been disconnected!", "Connection");
    }
    
    private function onPeerConneceted(event:GenericConnectorEvent):void
    {
        currentState = "connected";
    }
    
    private function onPeerDisconneceted(event:GenericConnectorEvent):void
    {
        currentState = "form";
        receiver.disconnect();
    }
    
    override public function set currentState(value:String):void
    {
        super.currentState = value;
        invalidateProperties();
    }
    
    private function connect():void
    {
        receiver.connectChannel(channel.text);
        currentState = "connecting";
    }
    
    private function disconnect():void
    {
        receiver.disconnect();
    }
]]>
</fx:Script>
<s:states>
    <s:State name="form" />
    <s:State name="connecting" />
    <s:State name="connected" />
</s:states>
<s:HGroup includeIn="form" width="100%" height="100%"
          verticalAlign="middle" horizontalAlign="center">
    <s:Label text="channel:" />
    <s:TextInput id="channel" enter="connect()" restrict="0-9"/>
    <s:Button click="connect()" label="connect"/>
</s:HGroup>
<s:VGroup includeIn="connecting" width="100%" height="100%"
          verticalAlign="middle" horizontalAlign="center">
    <s:Label text="connecting..." />
    <s:Button click="disconnect()" label="cancel"/>
</s:VGroup>
<view:MainStackAir includeIn="connected" width="100%" height="100%" receiver="{receiver}"/>
</s:WindowedApplication>