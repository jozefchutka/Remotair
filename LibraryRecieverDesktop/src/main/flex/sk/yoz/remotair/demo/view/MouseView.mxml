<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx"
         creationComplete="init()">
<fx:Script>
<![CDATA[
    import com.greensock.TweenMax;
    
    import sk.yoz.remotair.events.RemotairEvent;
    import sk.yoz.remotair.net.Reciever;
    
    private var _receiver:Reciever;
    private var offset:Point;
    
    private var colors:Array = [0xff0000, 0x00ff00, 0x0000ff];
    private var trackers:Dictionary = new Dictionary(true);
    
    private function init():void
    {
        alpha = 0.5;
    }
    
    public function set receiver(value:Reciever):void
    {
        _receiver = value;
        receiver.mouseEvents.addEventListener(MouseEvent.MOUSE_MOVE, onReceivedMouseMove);
        receiver.mouseEvents.addEventListener(MouseEvent.MOUSE_DOWN, onReceivedMouseDown);
        receiver.mouseEvents.addEventListener(RemotairEvent.MOUSE_LEFT_DOWN, onReceivedMouseLeftDown);
        receiver.mouseEvents.addEventListener(RemotairEvent.MOUSE_LEFT_UP, onReceivedMouseLeftUp);
        receiver.mouseEvents.addEventListener(RemotairEvent.MOUSE_RIGHT_DOWN, onReceivedMouseRightDown);
        receiver.mouseEvents.addEventListener(RemotairEvent.MOUSE_RIGHT_UP, onReceivedMouseRightUp);
        
        receiver.touchEvents.addEventListener(TouchEvent.TOUCH_BEGIN, onTouchBegin);
        receiver.touchEvents.addEventListener(TouchEvent.TOUCH_END, onTouchEnd);
        receiver.touchEvents.addEventListener(TouchEvent.TOUCH_MOVE, onTouchMove);
    }
    
    public function get receiver():Reciever
    {
        return _receiver;
    }
    
    protected function onReceivedMouseMove(event:MouseEvent):void
    {
        var tracker:FingerTracker = trackerByID(0);
        tracker.x = event.localX + offset.x;
        tracker.y = event.localY + offset.y;
        
        if(tracker.x > width)
            offset.x -= tracker.x - width;
        if(tracker.x < 0)
            offset.x -= tracker.x;
        if(tracker.y > height)
            offset.y -= tracker.y - height;
        if(tracker.y < 0)
            offset.y -= tracker.y;
    }
    
    protected function onReceivedMouseDown(event:MouseEvent):void
    {
        var tracker:FingerTracker = trackerByID(0);
        offset = offset ? 
            new Point(
                tracker.x - event.localX,
                tracker.y - event.localY) :
            new Point(
                width / 2 - event.localX, 
                height / 2 - event.localY);
    }
    
    protected function onReceivedMouseLeftDown(event:MouseEvent):void
    {
        alpha = 1;
    }
    
    protected function onReceivedMouseLeftUp(event:MouseEvent):void
    {
        alpha = 0.5;
    }
    
    protected function onReceivedMouseRightDown(event:MouseEvent):void
    {
        var tracker:FingerTracker = trackerByID(0);
        tracker.scaleX = tracker.scaleY = 2;
    }
    
    protected function onReceivedMouseRightUp(event:MouseEvent):void
    {
        var tracker:FingerTracker = trackerByID(0);
        TweenMax.to(tracker, .5, {scaleX:1, scaleY:1});
    }
    
    protected function trackerByID(id:int):FingerTracker
    {
        var color:uint = id < colors.length ? colors[id] : 0x0;
        var tracker:FingerTracker = trackers[id] || new FingerTracker(color);
        if(!tracker.parent)
            container.addChild(tracker);
        trackers[id] = tracker;
        return tracker;
    }
    
    protected function onTouchBegin(event:TouchEvent):void
    {
        var tracker:FingerTracker = trackerByID(event.touchPointID);
        tracker.x = event.localX;
        tracker.y = event.localY;
    }
    
    protected function onTouchMove(event:TouchEvent):void
    {
        var tracker:FingerTracker = trackerByID(event.touchPointID);
        tracker.x = event.localX;
        tracker.y = event.localY;
    }
    
    protected function onTouchEnd(event:TouchEvent):void
    {
        var tracker:FingerTracker = trackerByID(event.touchPointID);
        tracker.x = event.localX;
        tracker.y = event.localY;
        tracker.parent && tracker.parent.removeChild(tracker);
    }
]]>
</fx:Script>
<s:SpriteVisualElement id="container" width="100%" height="100%"/>
</s:VGroup>